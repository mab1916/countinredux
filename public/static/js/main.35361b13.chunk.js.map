{"version":3,"sources":["redux/constants/type.js","App.js","redux/actions/countActions.js","reportWebVitals.js","redux/rootReducers.js","redux/reducers/countReduce.js","config/store.js","index.js"],"names":["INCREMENT","DECREMENT","REFRESH","useStyles1","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","useStyles2","margin","createMuiTheme","typography","htmlFontSize","App","count","useSelector","state","CountReduce","counter","useDispatch","classes1","classes2","className","Grid","container","item","xs","sm","Paper","Button","variant","onClick","type","payload","data","ThemeProvider","Typography","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"+KAAaA,EAAY,YACZC,EAAY,YACZC,EAAU,U,kHCWjBC,EAAaC,aAAW,SAACC,GAAD,MAAY,CACxCC,KAAM,CACJC,SAAU,GAEZC,MAAO,CACLC,QAASJ,EAAMK,QAAQ,GACvBC,UAAW,SACXC,MAAOP,EAAMQ,QAAQC,KAAKC,eAIxBC,EAAaZ,aAAW,SAACC,GAAD,MAAY,CACxCC,KAAM,CACJ,QAAS,CACPW,OAAQZ,EAAMK,QAAQ,SAKtBL,EAAQa,YAAe,CAC3BC,WAAY,CAEVC,aAAc,QA+CHC,MA3Cf,WACE,IAAMC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,eACrCC,EAAUC,cACVC,EAAWzB,IACX0B,EAAWb,IACjB,OACE,qBAAKc,WAAWF,EAAStB,KAAMuB,EAASvB,MAAxC,SACE,eAACyB,EAAA,EAAD,CAAMC,WAAS,EAACtB,QAAS,EAAzB,UACE,cAACqB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAACC,EAAA,EAAD,CAAON,UAAWF,EAASpB,MAA3B,SACA,cAAC6B,EAAA,EAAD,CAAQC,QAAQ,YAAY1B,MAAM,UAAU2B,QAAS,kBAAMb,ECrC1D,CACHc,KAAMvC,EACNwC,QAASC,IAHO,IAACA,GDsCf,SACE,cAAC,IAAD,UAIJ,cAACX,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAACC,EAAA,EAAD,CAAON,UAAWF,EAASpB,MAA3B,SACA,cAACmC,EAAA,EAAD,CAAetC,MAAOA,EAAtB,SACE,cAACuC,EAAA,EAAD,UACGtB,UAKP,cAACS,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,cAACC,EAAA,EAAD,CAAON,UAAWF,EAASpB,MAA3B,SACA,cAAC6B,EAAA,EAAD,CAAQC,QAAQ,YAAY1B,MAAM,YAAY2B,QAAS,kBAAMb,EC3D5D,CACHc,KAAMxC,EACNyC,QAASC,IAHM,IAACA,GD4Dd,SACE,cAAC,IAAD,UAIJ,cAACX,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACE,EAAA,EAAD,CAAON,UAAWF,EAASpB,MAA3B,SACE,cAAC6B,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMb,ECtD5C,CACHc,KAAMtC,EACNuC,QAASC,IAHM,IAACA,GDuDZ,SACE,cAAC,IAAD,gBE7DCG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCJd,IAKeQ,EALKC,YAAgB,CAElC9B,YCCa,WAAkD,IAA7BD,EAA4B,uDAF7C,EAEqCgC,EAAQ,uCAE5D,OAAQA,EAAOhB,MACX,KAAKxC,EACD,OAAOwB,EAAQ,EACnB,KAAKvB,EACD,OAAOuB,EAAQ,EACnB,KAAKtB,EACD,OAAe,EACnB,QACI,OAAOsB,MCTJiC,EADDC,YAAYJ,EAAaK,YAAgBC,MCEvDC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.35361b13.chunk.js","sourcesContent":["export const INCREMENT = \"INCREMENT\";\r\nexport const DECREMENT = \"DECREMENT\";\r\nexport const REFRESH = \"REFRESH\";","import { useSelector, useDispatch } from \"react-redux\";\nimport { InCount, OutCount, Refresh } from \"./redux/actions/countActions.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nconst theme = createMuiTheme({\n  typography: {\n    // Tell Material-UI what the font-size on the html element is.\n    htmlFontSize: 10.4,\n  },\n});\n\nfunction App() {\n  const count = useSelector((state) => state.CountReduce );\n  const counter = useDispatch();\n  const classes1 = useStyles1();\n  const classes2 = useStyles2();\n  return (\n    <div className={classes1.root, classes2.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={6} sm={4}>\n          <Paper className={classes1.paper}>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => counter(OutCount())}>\n            <RemoveIcon />\n          </Button>\n          </Paper>\n        </Grid>\n        <Grid item xs={6} sm={4}>\n          <Paper className={classes1.paper}>\n          <ThemeProvider theme={theme}>\n            <Typography>\n              {count}\n            </Typography>\n          </ThemeProvider>\n          </Paper>\n        </Grid>\n        <Grid item xs={6} sm={4}>\n          <Paper className={classes1.paper}>\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => counter(InCount())}>\n            <AddIcon />\n          </Button>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Paper className={classes1.paper}>\n            <Button variant=\"contained\" onClick={() => counter(Refresh())}>\n              <RefreshIcon />\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import { INCREMENT } from \"../constants/type\";\r\nimport { DECREMENT } from \"../constants/type\";\r\nimport { REFRESH } from \"../constants/type\";\r\n\r\n\r\nexport const InCount = (data) => {\r\n    return {\r\n        type: INCREMENT,\r\n        payload: data\r\n    }\r\n}\r\nexport const OutCount = (data) => {\r\n    return {\r\n        type: DECREMENT,\r\n        payload: data\r\n    }\r\n}\r\nexport const Refresh = (data) => {\r\n    return {\r\n        type: REFRESH,\r\n        payload: data\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux'\r\nimport CountReduce from './reducers/countReduce'\r\n\r\nconst rootReducer = combineReducers({\r\n  // Define a top-level state field named `todos`, handled by `todosReducer`\r\n  CountReduce\r\n});\r\n\r\nexport default rootReducer;","import { INCREMENT } from \"../constants/type\";\r\nimport { DECREMENT } from \"../constants/type\";\r\nimport { REFRESH } from \"../constants/type\";\r\n\r\nlet initialState = 0;\r\n\r\nexport default function CountReduce(state=initialState, action) {\r\n    \r\n    switch (action.type) {\r\n        case INCREMENT:\r\n            return state + 1;\r\n        case DECREMENT:\r\n            return state - 1;\r\n        case REFRESH:\r\n            return state = 0;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport rootReducer from '../redux/rootReducers'\r\n\r\n\r\n// The store now has the ability to accept thunk functions in `dispatch`\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from \"./config/store.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}